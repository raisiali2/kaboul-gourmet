{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a923304\\\\Downloads\\\\kaboul Gourmet\\\\src\\\\components\\\\Button.js\";\nimport React from 'react';\nimport './Button.css';\n\n/**\r\n * Button Component\r\n * \r\n * A reusable button component with Galvin's styling\r\n * \r\n * @param {string} variant - 'primary', 'secondary', or 'text'\r\n * @param {string} size - 'small', 'medium', or 'large'\r\n * @param {boolean} fullWidth - Whether the button should take full width\r\n * @param {function} onClick - Click handler function\r\n * @param {string} href - If provided, button will render as an anchor tag\r\n * @param {string} className - Additional CSS classes\r\n * @param {node} children - Button content\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = ({\n  variant = 'primary',\n  size = 'medium',\n  fullWidth = false,\n  onClick,\n  href,\n  className = '',\n  children,\n  ...rest\n}) => {\n  const buttonClass = `btn btn-${variant} btn-${size} ${fullWidth ? 'btn-full-width' : ''} ${className}`;\n\n  // If href is provided, render an anchor tag\n  if (href) {\n    return /*#__PURE__*/_jsxDEV(\"a\", {\n      href: href,\n      className: buttonClass,\n      ...rest,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Otherwise render a button\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: buttonClass,\n    onClick: onClick,\n    ...rest,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_c = Button;\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Button","variant","size","fullWidth","onClick","href","className","children","rest","buttonClass","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/a923304/Downloads/kaboul Gourmet/src/components/Button.js"],"sourcesContent":["import React from 'react';\r\nimport './Button.css';\r\n\r\n/**\r\n * Button Component\r\n * \r\n * A reusable button component with Galvin's styling\r\n * \r\n * @param {string} variant - 'primary', 'secondary', or 'text'\r\n * @param {string} size - 'small', 'medium', or 'large'\r\n * @param {boolean} fullWidth - Whether the button should take full width\r\n * @param {function} onClick - Click handler function\r\n * @param {string} href - If provided, button will render as an anchor tag\r\n * @param {string} className - Additional CSS classes\r\n * @param {node} children - Button content\r\n */\r\nconst Button = ({ \r\n  variant = 'primary', \r\n  size = 'medium',\r\n  fullWidth = false,\r\n  onClick,\r\n  href,\r\n  className = '',\r\n  children,\r\n  ...rest\r\n}) => {\r\n  const buttonClass = `btn btn-${variant} btn-${size} ${fullWidth ? 'btn-full-width' : ''} ${className}`;\r\n  \r\n  // If href is provided, render an anchor tag\r\n  if (href) {\r\n    return (\r\n      <a \r\n        href={href} \r\n        className={buttonClass}\r\n        {...rest}\r\n      >\r\n        {children}\r\n      </a>\r\n    );\r\n  }\r\n  \r\n  // Otherwise render a button\r\n  return (\r\n    <button \r\n      className={buttonClass} \r\n      onClick={onClick}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA,SAAAC,MAAA,IAAAC,OAAA;AAaA,MAAMC,MAAM,GAAGA,CAAC;EACdC,OAAO,GAAG,SAAS;EACnBC,IAAI,GAAG,QAAQ;EACfC,SAAS,GAAG,KAAK;EACjBC,OAAO;EACPC,IAAI;EACJC,SAAS,GAAG,EAAE;EACdC,QAAQ;EACR,GAAGC;AACL,CAAC,KAAK;EACJ,MAAMC,WAAW,GAAG,WAAWR,OAAO,QAAQC,IAAI,IAAIC,SAAS,GAAG,gBAAgB,GAAG,EAAE,IAAIG,SAAS,EAAE;;EAEtG;EACA,IAAID,IAAI,EAAE;IACR,oBACEN,OAAA;MACEM,IAAI,EAAEA,IAAK;MACXC,SAAS,EAAEG,WAAY;MAAA,GACnBD,IAAI;MAAAD,QAAA,EAEPA;IAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAER;;EAEA;EACA,oBACEd,OAAA;IACEO,SAAS,EAAEG,WAAY;IACvBL,OAAO,EAAEA,OAAQ;IAAA,GACbI,IAAI;IAAAD,QAAA,EAEPA;EAAQ;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb,CAAC;AAACC,EAAA,GAnCId,MAAM;AAqCZ,eAAeA,MAAM;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}