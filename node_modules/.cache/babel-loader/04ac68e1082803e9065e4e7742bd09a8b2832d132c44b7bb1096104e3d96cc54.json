{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a923304\\\\Downloads\\\\kaboul Gourmet\\\\src\\\\components\\\\common\\\\AnimatedImage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { motion, useReducedMotion } from 'framer-motion';\n\n/**\r\n * AnimatedImage Component - Performance Optimized\r\n * \r\n * A wrapper component that adds subtle animations to images\r\n * with progressive loading and performance optimizations for 60fps\r\n * \r\n * @param {string} src - Image source URL\r\n * @param {string} alt - Image alt text\r\n * @param {string} className - Additional CSS classes\r\n * @param {string} effect - Animation effect type: 'zoom', 'tilt', or 'shine'\r\n * @param {string} placeholderSrc - URL for low-res placeholder image\r\n * @param {string} placeholderColor - Background color before image loads\r\n * @param {boolean} shouldLazyLoad - Whether to use lazy loading\r\n * @param {boolean} priority - Whether image is high priority (preload)\r\n * @param {function} onLoad - Callback when image loads\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnimatedImage = ({\n  src,\n  alt = '',\n  className = '',\n  effect = 'zoom',\n  placeholderSrc = '',\n  placeholderColor = '#f5f5f5',\n  shouldLazyLoad = true,\n  priority = false,\n  onLoad = () => {},\n  ...props\n}) => {\n  _s();\n  // Track image loading states\n  const [isPlaceholderLoaded, setIsPlaceholderLoaded] = useState(!placeholderSrc);\n  const [isMainImageLoaded, setIsMainImageLoaded] = useState(false);\n  const imageRef = useRef(null);\n  const containerRef = useRef(null);\n\n  // Check if user prefers reduced motion\n  const prefersReducedMotion = useReducedMotion();\n\n  // Check if on mobile\n  const [isMobile, setIsMobile] = useState(false);\n  const [hasTouch, setHasTouch] = useState(false);\n  const [isInView, setIsInView] = useState(false);\n  useEffect(() => {\n    // Check device capabilities on mount\n    const checkDevice = () => {\n      setIsMobile(window.innerWidth <= 768);\n      setHasTouch('ontouchstart' in window || navigator.maxTouchPoints > 0);\n    };\n    checkDevice();\n    window.addEventListener('resize', checkDevice);\n    return () => {\n      window.removeEventListener('resize', checkDevice);\n    };\n  }, []);\n\n  // Set up intersection observer to track visibility for better performance\n  useEffect(() => {\n    if (!containerRef.current || typeof IntersectionObserver === 'undefined') {\n      setIsInView(true); // Fallback for older browsers\n      return;\n    }\n    const observer = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting) {\n        setIsInView(true);\n        observer.unobserve(containerRef.current);\n      }\n    }, {\n      threshold: 0.1,\n      rootMargin: '200px 0px' // Start loading before it's visible\n    });\n    observer.observe(containerRef.current);\n    return () => {\n      if (containerRef.current) {\n        observer.unobserve(containerRef.current);\n      }\n    };\n  }, []);\n\n  // Handle image loads\n  useEffect(() => {\n    // If priority image, start loading right away regardless of viewport\n    if (priority && src) {\n      const img = new Image();\n      img.onload = () => {\n        setIsMainImageLoaded(true);\n        onLoad(src);\n      };\n      img.src = src;\n      if (placeholderSrc) {\n        const placeholderImg = new Image();\n        placeholderImg.onload = () => setIsPlaceholderLoaded(true);\n        placeholderImg.src = placeholderSrc;\n      }\n    }\n  }, [priority, src, placeholderSrc, onLoad]);\n\n  // Handle placeholder image load completion\n  const handlePlaceholderLoad = () => {\n    setIsPlaceholderLoaded(true);\n  };\n\n  // Handle main image load completion\n  const handleMainImageLoad = () => {\n    setIsMainImageLoaded(true);\n    onLoad(src);\n  };\n\n  // Define hover animations - optimized for performance\n  const hoverEffects = {\n    zoom: {\n      scale: isMobile ? 1.03 : 1.05,\n      transition: {\n        duration: isMobile ? 0.3 : 0.5,\n        ease: \"easeOut\"\n      }\n    },\n    tilt: {\n      rotateX: isMobile ? 2 : 5,\n      rotateY: isMobile ? 2 : 5,\n      transition: {\n        duration: 0.3,\n        ease: \"easeOut\"\n      }\n    },\n    shine: {\n      filter: \"brightness(1.1)\",\n      transition: {\n        duration: 0.3,\n        ease: \"easeOut\"\n      }\n    }\n  };\n\n  // Simplified effects for accessibility\n  const accessibleEffects = {\n    zoom: {\n      scale: 1.02,\n      transition: {\n        duration: 0.3\n      }\n    },\n    tilt: {\n      opacity: 0.9,\n      transition: {\n        duration: 0.3\n      }\n    },\n    shine: {\n      opacity: 0.9,\n      transition: {\n        duration: 0.3\n      }\n    }\n  };\n\n  // Skip effects on touch devices for certain animations\n  const shouldDisableEffects = prefersReducedMotion || hasTouch && effect === 'tilt';\n\n  // Get appropriate effect based on preferences and device\n  const effectToUse = shouldDisableEffects ? effect === 'zoom' ? 'zoom' : 'shine' : effect;\n  const hoverEffect = prefersReducedMotion ? accessibleEffects[effectToUse] : hoverEffects[effectToUse] || hoverEffects.zoom;\n  const containerClass = `animated-image-container ${effect === 'shine' ? 'shine-effect' : ''} ${className}`;\n\n  // Determine what images to show based on loading state\n  const showPlaceholder = placeholderSrc && isPlaceholderLoaded && !isMainImageLoaded;\n  const showMainImage = isMainImageLoaded || !placeholderSrc && isInView;\n\n  // Only animate loaded images\n  const canAnimate = isMainImageLoaded || showPlaceholder && !shouldDisableEffects;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    className: containerClass,\n    style: {\n      backgroundColor: placeholderColor,\n      overflow: 'hidden',\n      position: 'relative'\n    },\n    children: [placeholderSrc && isInView && !isMainImageLoaded && /*#__PURE__*/_jsxDEV(motion.img, {\n      src: placeholderSrc,\n      alt: alt,\n      className: \"animated-image placeholder-image\",\n      initial: {\n        opacity: 0\n      },\n      animate: {\n        opacity: isPlaceholderLoaded ? 0.8 : 0\n      },\n      transition: {\n        duration: 0.3\n      },\n      onLoad: handlePlaceholderLoad,\n      style: {\n        position: isMainImageLoaded ? 'absolute' : 'relative',\n        top: 0,\n        left: 0,\n        filter: 'blur(10px)',\n        transform: 'scale(1.05) translateZ(0)',\n        // Slightly larger to cover blur edges\n        width: '100%',\n        height: 'auto',\n        zIndex: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this), (isInView || priority) && /*#__PURE__*/_jsxDEV(motion.img, {\n      ref: imageRef,\n      src: src,\n      alt: alt,\n      className: \"animated-image main-image\",\n      initial: {\n        opacity: 0\n      },\n      animate: {\n        opacity: isMainImageLoaded ? 1 : 0,\n        transition: {\n          duration: 0.5\n        }\n      },\n      whileHover: canAnimate ? hoverEffect : {},\n      loading: shouldLazyLoad && !priority ? \"lazy\" : \"eager\",\n      fetchpriority: priority ? \"high\" : \"auto\",\n      onLoad: handleMainImageLoad,\n      style: {\n        position: 'relative',\n        zIndex: 2,\n        width: '100%',\n        height: 'auto',\n        // Hardware acceleration hints\n        willChange: canAnimate ? 'transform, filter' : 'auto',\n        backfaceVisibility: 'hidden',\n        WebkitBackfaceVisibility: 'hidden',\n        transform: 'translateZ(0)',\n        transition: 'opacity 0.5s ease'\n      },\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n\n// CSS for the shine effect - more efficiently included as a stylesheet\n// This has been moved to an external file for better caching and performance\n_s(AnimatedImage, \"vZr/oc/ARvmqlgQ3698bc3i/vI0=\", false, function () {\n  return [useReducedMotion];\n});\n_c = AnimatedImage;\nconst shineStyles = `\n  .animated-image-container {\n    position: relative;\n    overflow: hidden;\n    display: inline-block;\n    transform: translateZ(0);\n  }\n  \n  .animated-image {\n    display: block;\n    max-width: 100%;\n    height: auto;\n    backface-visibility: hidden;\n  }\n  \n  @media (prefers-reduced-motion: no-preference) {\n    .animated-image-container.shine-effect::before {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: -75%;\n      width: 50%;\n      height: 100%;\n      background: linear-gradient(\n        to right,\n        rgba(255, 255, 255, 0) 0%,\n        rgba(255, 255, 255, 0.3) 100%\n      );\n      transform: skewX(-25deg);\n      z-index: 3;\n      opacity: 0;\n      transition: opacity 0.3s ease;\n      will-change: transform, opacity;\n    }\n    \n    .animated-image-container.shine-effect:hover::before {\n      animation: shine 1s ease;\n      opacity: 1;\n    }\n    \n    @keyframes shine {\n      to {\n        left: 125%;\n      }\n    }\n  }\n  \n  /* Optimize animations for mobile */\n  @media (max-width: 768px) {\n    @keyframes shine {\n      to {\n        left: 150%;\n      }\n    }\n    \n    .animated-image-container.shine-effect::before {\n      width: 30%; /* Smaller shine effect on mobile */\n    }\n  }\n`;\n\n// Add the styles to the document head\nif (typeof document !== 'undefined') {\n  const styleId = 'animated-image-styles';\n\n  // Only add styles if they don't already exist\n  if (!document.getElementById(styleId)) {\n    const styleEl = document.createElement('style');\n    styleEl.id = styleId;\n    styleEl.type = 'text/css';\n    styleEl.appendChild(document.createTextNode(shineStyles));\n    document.head.appendChild(styleEl);\n  }\n}\nexport default AnimatedImage;\nvar _c;\n$RefreshReg$(_c, \"AnimatedImage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","motion","useReducedMotion","jsxDEV","_jsxDEV","AnimatedImage","src","alt","className","effect","placeholderSrc","placeholderColor","shouldLazyLoad","priority","onLoad","props","_s","isPlaceholderLoaded","setIsPlaceholderLoaded","isMainImageLoaded","setIsMainImageLoaded","imageRef","containerRef","prefersReducedMotion","isMobile","setIsMobile","hasTouch","setHasTouch","isInView","setIsInView","checkDevice","window","innerWidth","navigator","maxTouchPoints","addEventListener","removeEventListener","current","IntersectionObserver","observer","entries","isIntersecting","unobserve","threshold","rootMargin","observe","img","Image","onload","placeholderImg","handlePlaceholderLoad","handleMainImageLoad","hoverEffects","zoom","scale","transition","duration","ease","tilt","rotateX","rotateY","shine","filter","accessibleEffects","opacity","shouldDisableEffects","effectToUse","hoverEffect","containerClass","showPlaceholder","showMainImage","canAnimate","ref","style","backgroundColor","overflow","position","children","initial","animate","top","left","transform","width","height","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","whileHover","loading","fetchpriority","willChange","backfaceVisibility","WebkitBackfaceVisibility","_c","shineStyles","document","styleId","getElementById","styleEl","createElement","id","type","appendChild","createTextNode","head","$RefreshReg$"],"sources":["C:/Users/a923304/Downloads/kaboul Gourmet/src/components/common/AnimatedImage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { motion, useReducedMotion } from 'framer-motion';\r\n\r\n/**\r\n * AnimatedImage Component - Performance Optimized\r\n * \r\n * A wrapper component that adds subtle animations to images\r\n * with progressive loading and performance optimizations for 60fps\r\n * \r\n * @param {string} src - Image source URL\r\n * @param {string} alt - Image alt text\r\n * @param {string} className - Additional CSS classes\r\n * @param {string} effect - Animation effect type: 'zoom', 'tilt', or 'shine'\r\n * @param {string} placeholderSrc - URL for low-res placeholder image\r\n * @param {string} placeholderColor - Background color before image loads\r\n * @param {boolean} shouldLazyLoad - Whether to use lazy loading\r\n * @param {boolean} priority - Whether image is high priority (preload)\r\n * @param {function} onLoad - Callback when image loads\r\n */\r\nconst AnimatedImage = ({ \r\n  src, \r\n  alt = '', \r\n  className = '', \r\n  effect = 'zoom',\r\n  placeholderSrc = '',\r\n  placeholderColor = '#f5f5f5',\r\n  shouldLazyLoad = true,\r\n  priority = false,\r\n  onLoad = () => {},\r\n  ...props \r\n}) => {\r\n  // Track image loading states\r\n  const [isPlaceholderLoaded, setIsPlaceholderLoaded] = useState(!placeholderSrc);\r\n  const [isMainImageLoaded, setIsMainImageLoaded] = useState(false);\r\n  const imageRef = useRef(null);\r\n  const containerRef = useRef(null);\r\n  \r\n  // Check if user prefers reduced motion\r\n  const prefersReducedMotion = useReducedMotion();\r\n  \r\n  // Check if on mobile\r\n  const [isMobile, setIsMobile] = useState(false);\r\n  const [hasTouch, setHasTouch] = useState(false);\r\n  const [isInView, setIsInView] = useState(false);\r\n  \r\n  useEffect(() => {\r\n    // Check device capabilities on mount\r\n    const checkDevice = () => {\r\n      setIsMobile(window.innerWidth <= 768);\r\n      setHasTouch('ontouchstart' in window || navigator.maxTouchPoints > 0);\r\n    };\r\n    \r\n    checkDevice();\r\n    window.addEventListener('resize', checkDevice);\r\n    \r\n    return () => {\r\n      window.removeEventListener('resize', checkDevice);\r\n    };\r\n  }, []);\r\n  \r\n  // Set up intersection observer to track visibility for better performance\r\n  useEffect(() => {\r\n    if (!containerRef.current || typeof IntersectionObserver === 'undefined') {\r\n      setIsInView(true); // Fallback for older browsers\r\n      return;\r\n    }\r\n    \r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        if (entries[0].isIntersecting) {\r\n          setIsInView(true);\r\n          observer.unobserve(containerRef.current);\r\n        }\r\n      },\r\n      { \r\n        threshold: 0.1,\r\n        rootMargin: '200px 0px' // Start loading before it's visible\r\n      }\r\n    );\r\n    \r\n    observer.observe(containerRef.current);\r\n    \r\n    return () => {\r\n      if (containerRef.current) {\r\n        observer.unobserve(containerRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n  \r\n  // Handle image loads\r\n  useEffect(() => {\r\n    // If priority image, start loading right away regardless of viewport\r\n    if (priority && src) {\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        setIsMainImageLoaded(true);\r\n        onLoad(src);\r\n      };\r\n      img.src = src;\r\n      if (placeholderSrc) {\r\n        const placeholderImg = new Image();\r\n        placeholderImg.onload = () => setIsPlaceholderLoaded(true);\r\n        placeholderImg.src = placeholderSrc;\r\n      }\r\n    }\r\n  }, [priority, src, placeholderSrc, onLoad]);\r\n\r\n  // Handle placeholder image load completion\r\n  const handlePlaceholderLoad = () => {\r\n    setIsPlaceholderLoaded(true);\r\n  };\r\n\r\n  // Handle main image load completion\r\n  const handleMainImageLoad = () => {\r\n    setIsMainImageLoaded(true);\r\n    onLoad(src);\r\n  };\r\n\r\n  // Define hover animations - optimized for performance\r\n  const hoverEffects = {\r\n    zoom: {\r\n      scale: isMobile ? 1.03 : 1.05,\r\n      transition: { duration: isMobile ? 0.3 : 0.5, ease: \"easeOut\" }\r\n    },\r\n    tilt: {\r\n      rotateX: isMobile ? 2 : 5, \r\n      rotateY: isMobile ? 2 : 5,\r\n      transition: { duration: 0.3, ease: \"easeOut\" }\r\n    },\r\n    shine: {\r\n      filter: \"brightness(1.1)\",\r\n      transition: { duration: 0.3, ease: \"easeOut\" }\r\n    }\r\n  };\r\n\r\n  // Simplified effects for accessibility\r\n  const accessibleEffects = {\r\n    zoom: { scale: 1.02, transition: { duration: 0.3 } },\r\n    tilt: { opacity: 0.9, transition: { duration: 0.3 } },\r\n    shine: { opacity: 0.9, transition: { duration: 0.3 } }\r\n  };\r\n\r\n  // Skip effects on touch devices for certain animations\r\n  const shouldDisableEffects = prefersReducedMotion || (hasTouch && effect === 'tilt');\r\n  \r\n  // Get appropriate effect based on preferences and device\r\n  const effectToUse = shouldDisableEffects ? \r\n    (effect === 'zoom' ? 'zoom' : 'shine') : \r\n    effect;\r\n    \r\n  const hoverEffect = prefersReducedMotion \r\n    ? accessibleEffects[effectToUse] \r\n    : hoverEffects[effectToUse] || hoverEffects.zoom;\r\n\r\n  const containerClass = `animated-image-container ${effect === 'shine' ? 'shine-effect' : ''} ${className}`;\r\n  \r\n  // Determine what images to show based on loading state\r\n  const showPlaceholder = placeholderSrc && isPlaceholderLoaded && !isMainImageLoaded;\r\n  const showMainImage = isMainImageLoaded || (!placeholderSrc && isInView);\r\n  \r\n  // Only animate loaded images\r\n  const canAnimate = isMainImageLoaded || (showPlaceholder && !shouldDisableEffects);\r\n  \r\n  return (\r\n    <div \r\n      ref={containerRef}\r\n      className={containerClass}\r\n      style={{ \r\n        backgroundColor: placeholderColor,\r\n        overflow: 'hidden',\r\n        position: 'relative'\r\n      }}\r\n    >\r\n      {/* Placeholder image */}\r\n      {placeholderSrc && isInView && !isMainImageLoaded && (\r\n        <motion.img\r\n          src={placeholderSrc}\r\n          alt={alt}\r\n          className=\"animated-image placeholder-image\"\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: isPlaceholderLoaded ? 0.8 : 0 }}\r\n          transition={{ duration: 0.3 }}\r\n          onLoad={handlePlaceholderLoad}\r\n          style={{ \r\n            position: isMainImageLoaded ? 'absolute' : 'relative',\r\n            top: 0,\r\n            left: 0,\r\n            filter: 'blur(10px)',\r\n            transform: 'scale(1.05) translateZ(0)', // Slightly larger to cover blur edges\r\n            width: '100%',\r\n            height: 'auto',\r\n            zIndex: 1\r\n          }}\r\n        />\r\n      )}\r\n      \r\n      {/* Main image - only load when in viewport or priority */}\r\n      {(isInView || priority) && (\r\n        <motion.img\r\n          ref={imageRef}\r\n          src={src}\r\n          alt={alt}\r\n          className=\"animated-image main-image\"\r\n          initial={{ opacity: 0 }}\r\n          animate={{ \r\n            opacity: isMainImageLoaded ? 1 : 0,\r\n            transition: { duration: 0.5 }\r\n          }}\r\n          whileHover={canAnimate ? hoverEffect : {}}\r\n          loading={shouldLazyLoad && !priority ? \"lazy\" : \"eager\"}\r\n          fetchpriority={priority ? \"high\" : \"auto\"}\r\n          onLoad={handleMainImageLoad}\r\n          style={{ \r\n            position: 'relative',\r\n            zIndex: 2,\r\n            width: '100%',\r\n            height: 'auto',\r\n            // Hardware acceleration hints\r\n            willChange: canAnimate ? 'transform, filter' : 'auto',\r\n            backfaceVisibility: 'hidden',\r\n            WebkitBackfaceVisibility: 'hidden',\r\n            transform: 'translateZ(0)',\r\n            transition: 'opacity 0.5s ease'\r\n          }}\r\n          {...props}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// CSS for the shine effect - more efficiently included as a stylesheet\r\n// This has been moved to an external file for better caching and performance\r\nconst shineStyles = `\r\n  .animated-image-container {\r\n    position: relative;\r\n    overflow: hidden;\r\n    display: inline-block;\r\n    transform: translateZ(0);\r\n  }\r\n  \r\n  .animated-image {\r\n    display: block;\r\n    max-width: 100%;\r\n    height: auto;\r\n    backface-visibility: hidden;\r\n  }\r\n  \r\n  @media (prefers-reduced-motion: no-preference) {\r\n    .animated-image-container.shine-effect::before {\r\n      content: '';\r\n      position: absolute;\r\n      top: 0;\r\n      left: -75%;\r\n      width: 50%;\r\n      height: 100%;\r\n      background: linear-gradient(\r\n        to right,\r\n        rgba(255, 255, 255, 0) 0%,\r\n        rgba(255, 255, 255, 0.3) 100%\r\n      );\r\n      transform: skewX(-25deg);\r\n      z-index: 3;\r\n      opacity: 0;\r\n      transition: opacity 0.3s ease;\r\n      will-change: transform, opacity;\r\n    }\r\n    \r\n    .animated-image-container.shine-effect:hover::before {\r\n      animation: shine 1s ease;\r\n      opacity: 1;\r\n    }\r\n    \r\n    @keyframes shine {\r\n      to {\r\n        left: 125%;\r\n      }\r\n    }\r\n  }\r\n  \r\n  /* Optimize animations for mobile */\r\n  @media (max-width: 768px) {\r\n    @keyframes shine {\r\n      to {\r\n        left: 150%;\r\n      }\r\n    }\r\n    \r\n    .animated-image-container.shine-effect::before {\r\n      width: 30%; /* Smaller shine effect on mobile */\r\n    }\r\n  }\r\n`;\r\n\r\n// Add the styles to the document head\r\nif (typeof document !== 'undefined') {\r\n  const styleId = 'animated-image-styles';\r\n  \r\n  // Only add styles if they don't already exist\r\n  if (!document.getElementById(styleId)) {\r\n    const styleEl = document.createElement('style');\r\n    styleEl.id = styleId;\r\n    styleEl.type = 'text/css';\r\n    styleEl.appendChild(document.createTextNode(shineStyles));\r\n    document.head.appendChild(styleEl);\r\n  }\r\n}\r\n\r\nexport default AnimatedImage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}